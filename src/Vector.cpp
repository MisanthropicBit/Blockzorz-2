#include "Vector.h"

//=========================================================================================================================

Vector::Vector()
{
	this->x = 0.f;
	this->y = 0.f;
}

//=========================================================================================================================

Vector::Vector(float x, float y)
{
	this->x = x;
	this->y = y;
}

//=========================================================================================================================

void Vector::SetAngle(float angle)
{
	float angleradians = angle * DEGS_TO_RADS;

	x *= cos(angleradians);
	y *= sin(angleradians);
}

//=========================================================================================================================

float Vector::Angle() const
{
	float result = atan2(y, x);
	if(result < 0) {result += 360;}
	if(result > 0) {result -= 360;}

	return result;
}

//=========================================================================================================================

float Vector::Length() const
{
	return (x * x + y * y);
}

bool Vector::IsZero()
{
	if(x == 0 && y == 0)
	{
		return true;
	}

	return false;
}

void Vector::Zero()
{
	x = 0;
	y = 0;
}

//=========================================================================================================================

Vector Vector::operator+ (const Vector& v)
{
	return (Vector(this->x + v.x, this->y + v.y));
}

//=========================================================================================================================

Vector Vector::operator- (const Vector& v)
{
	return (Vector(this->x - v.x, this->y - v.y));
}

//=========================================================================================================================

Vector Vector::operator* (const Vector& v)
{
	return (Vector(this->x * v.x, this->y * v.y));
}

//=========================================================================================================================

Vector Vector::operator/ (const Vector& v)
{
	return (Vector(this->x / v.x, this->y / v.y));
}

//=========================================================================================================================

void Vector::operator+= (const Vector& v)
{
	this->x += v.x;
	this->y += v.y;
}

//=========================================================================================================================

void Vector::operator-= (const Vector& v)
{
	this->x -= v.x;
	this->y -= v.y;
}

//=========================================================================================================================

void Vector::operator*= (const Vector& v)
{
	this->x *= v.x;
	this->y *= v.y;
}

//=========================================================================================================================

void Vector::operator/= (const Vector& v)
{
	this->x /= v.x;
	this->y /= v.y;
}

//=========================================================================================================================

Vector Vector::operator+ (float f)
{
	return (Vector(this->x + f, this->y + f));
}

//=========================================================================================================================

Vector Vector::operator- (float f)
{
	return (Vector(this->x - f, this->y - f));
}

//=========================================================================================================================

Vector Vector::operator* (float f)
{
	return (Vector(this->x * f, this->y * f));
}

//=========================================================================================================================

Vector Vector::operator/ (float f)
{
	return (Vector(this->x / f, this->y / f));
}

//=========================================================================================================================

void Vector::operator+= (float f)
{
	this->x += f;
	this->y += f;
}

//=========================================================================================================================

void Vector::operator-= (float f)
{
	this->x -= f;
	this->y -= f;
}

//=========================================================================================================================

void Vector::operator*= (float f)
{
	this->x *= f;
	this->y *= f;
}

//=========================================================================================================================

void Vector::operator/= (float f)
{
	this->x /= f;
	this->y /= f;
}

//=========================================================================================================================

bool Vector::operator== (const Vector& v)
{
	return (this->x == v.x && this->y == v.y);
}

//=========================================================================================================================

bool Vector::operator!= (const Vector& v)
{
	return (this->x != v.x || this->y != v.y);
}

//=========================================================================================================================